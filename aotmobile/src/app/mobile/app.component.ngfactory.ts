/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/app/mobile/app.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/query_list';
import * as import9 from 'ionic-angular/components/nav/nav';
import * as import10 from '../../../node_modules/ionic-angular/components/nav/nav.ngfactory';
import * as import11 from 'ionic-angular/navigation/view-controller';
import * as import12 from 'ionic-angular/navigation/nav-controller';
import * as import13 from 'ionic-angular/components/app/app';
import * as import14 from 'ionic-angular/config/config';
import * as import15 from 'ionic-angular/platform/platform';
import * as import16 from 'ionic-angular/platform/keyboard';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/core/src/zone/ng_zone';
import * as import19 from '@angular/core/src/linker/component_factory_resolver';
import * as import20 from 'ionic-angular/gestures/gesture-controller';
import * as import21 from 'ionic-angular/transitions/transition-controller';
import * as import22 from 'ionic-angular/navigation/deep-linker';
import * as import23 from 'ionic-angular/platform/dom-controller';
import * as import24 from 'ionic-angular/components/split-pane/split-pane';
export class Wrapper_MyApp {
  /*private*/ _eventHandler:Function;
  context:import0.MyApp;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.MyApp();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_MyApp_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_MyApp_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.MyApp>;
  _MyApp_0_3:Wrapper_MyApp;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MyApp_Host0,renderType_MyApp_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ion-app',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_MyApp0(this.viewUtils,this,0,this._el_0);
    this._MyApp_0_3 = new Wrapper_MyApp();
    this.compView_0.create(this._MyApp_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._MyApp_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MyApp) && (0 === requestNodeIndex))) { return this._MyApp_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MyApp_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MyAppNgFactory:import7.ComponentFactory<import0.MyApp> = new import7.ComponentFactory<import0.MyApp>('ion-app',View_MyApp_Host0,import0.MyApp);
const styles_MyApp:any[] = ([] as any[]);
var renderType_MyApp:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_MyApp,{});
export class View_MyApp0 extends import1.AppView<import0.MyApp> {
  _viewQuery_Nav_0:import8.QueryList<any>;
  _text_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import1.AppView<import9.Nav>;
  _Nav_2_3:import10.Wrapper_Nav;
  __RootNode_2_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MyApp0,renderType_MyApp,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  get _RootNode_2_4():any {
    if ((this.__RootNode_2_4 == null)) { (this.__RootNode_2_4 = this._Nav_2_3.context); }
    return this.__RootNode_2_4;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_Nav_0 = new import8.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._text_1 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,parentRenderNode,'ion-nav',new import3.InlineArray2(2,'swipeBackEnabled','false'),(null as any));
    this.compView_2 = new import10.View_Nav0(this.viewUtils,this,2,this._el_2);
    this._Nav_2_3 = new import10.Wrapper_Nav(this.parentView.injectorGet(import11.ViewController,this.parentIndex,(null as any)),this.parentView.injectorGet(import12.NavController,this.parentIndex,(null as any)),this.parentView.injectorGet(import13.App,this.parentIndex),this.parentView.injectorGet(import14.Config,this.parentIndex),this.parentView.injectorGet(import15.Platform,this.parentIndex),this.parentView.injectorGet(import16.Keyboard,this.parentIndex),new import17.ElementRef(this._el_2),this.parentView.injectorGet(import18.NgZone,this.parentIndex),this.renderer,this.parentView.injectorGet(import19.ComponentFactoryResolver,this.parentIndex),this.parentView.injectorGet(import20.GestureController,this.parentIndex),this.parentView.injectorGet(import21.TransitionController,this.parentIndex),this.parentView.injectorGet(import22.DeepLinker,this.parentIndex,(null as any)),this.parentView.injectorGet(import23.DomController,this.parentIndex));
    this.compView_2.create(this._Nav_2_3.context);
    this._viewQuery_Nav_0.reset([this._Nav_2_3.context]);
    this.context.nav = this._viewQuery_Nav_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._text_1,
      this._el_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.Nav) && (2 === requestNodeIndex))) { return this._Nav_2_3.context; }
    if (((token === import24.RootNode) && (2 === requestNodeIndex))) { return this._RootNode_2_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = 'false';
    this._Nav_2_3.check_swipeBackEnabled(currVal_2_0_0,throwOnChange,false);
    this._Nav_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Nav_2_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._Nav_2_3.ngOnDestroy();
  }
}